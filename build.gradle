plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

// set dependencies of all projects
allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    group 'com.fishdemon.sbt'
    version '1.0'

    sourceCompatibility = 1.8

    repositories {
        maven{ url 'https://maven.aliyun.com/repository/jcenter'}
        maven{ url 'https://maven.aliyun.com/repository/gradle-plugin'}
        maven{ url 'https://maven.aliyun.com/repository/public'}
        mavenCentral()
    }
}

// set dependencies of sub projects
subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    ext {
//        set('springBootAdminVersion', "2.2.1")
//        set('springCloudVersion', "Hoxton.SR3")
    }

    dependencies {
        implementation 'cn.hutool:hutool-all:5.2.5'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        runtimeOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }
}

project(':sbt-ftp-server') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        // 实现 ftp server 所有的依赖
        implementation 'org.apache.ftpserver:ftpserver-core:1.1.1'
//        implementation 'org.slf4j:slf4j-api:1.7.30'
//        implementation 'org.slf4j:jcl-over-slf4j:1.7.30'
//        implementation 'org.slf4j:slf4j-simple:1.7.30'
    }

}

project(':sbt-ftp-client') {
    dependencies {
        // 实现 ftp client 所需的依赖
        implementation 'commons-net:commons-net:3.6'
        implementation 'commons-logging:commons-logging:1.2'
        implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    }

}

project(':sbt-mvc') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':sbt-mybatis') {
    dependencies {
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'mysql:mysql-connector-java'
    }
}

project(':sbt-mybatis-plus') {
    dependencies {

    }
}

project(':sbt-security') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}

project(':sbt-security-jwt') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.security:spring-security-jwt:1.0.10.RELEASE'
        implementation 'com.alibaba:fastjson:1.2.56'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}

project(':sbt-security-oauth') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}

project(':sbt-security-oauth2') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}

project(':sbt-shiro-jwt') {
    dependencies {
        implementation 'cn.hutool:hutool-all:5.2.5'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-devtools'

        implementation 'com.baomidou:mybatis-plus-boot-starter:3.2.0'
        implementation 'org.freemarker:freemarker:2.3.29'
        implementation 'com.baomidou:mybatis-plus-generator:3.2.0'

        // shiro
        implementation 'org.apache.shiro:shiro-spring:1.3.2'
        implementation 'com.auth0:java-jwt:3.2.0'

        //redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // swagger
        implementation 'io.springfox:springfox-swagger2:2.4.0'
        implementation 'io.springfox:springfox-swagger-ui:2.4.0'
        implementation 'com.github.xiaoymin:swagger-bootstrap-ui:1.9.6'

        implementation 'jalopy:jalopy:1.5rc3'
    }
}

project(':sbt-socketio') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'com.corundumstudio.socketio:netty-socketio:1.7.13'
        implementation 'io.netty:netty-all:4.1.49.Final'
        implementation 'io.socket:socket.io-client:1.0.0'
    }
}

project(':sbt-spring-event') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}


project(':sbt-websocket') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
    }
}

project(':sbt-util') {
    dependencies {
        implementation 'cn.hutool:hutool-all:5.2.5'
    }
}

